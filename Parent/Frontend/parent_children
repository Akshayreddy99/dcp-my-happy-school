import { useState } from "react";
import { 
  Card, 
  CardContent, 
  CardDescription, 
  CardHeader, 
  CardTitle 
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { UserPlus, AlertCircle } from "lucide-react";
import { useData } from "@/contexts/DataContext";
import AddChildDialog from "./add-child-dialog";

export default function ParentChildren() {
  const { students, loading, error, refreshData } = useData();
  const [isAddChildOpen, setIsAddChildOpen] = useState(false);

  const handleAddChild = async (childData: any) => {
    try {
      const response = await fetch('/api/students', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(childData)
      });

      if (!response.ok) {
        const error = await response.json();
        throw new Error(error.message || 'Failed to add child');
      }

      // Refresh students data
      await refreshData('students');
    } catch (error) {
      throw error;
    }
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary"></div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="flex items-center justify-center h-64 text-red-500">
        <AlertCircle className="h-6 w-6 mr-2" />
        <span>Failed to load children data. Please try again.</span>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      <Card className="bg-white dark:bg-gray-800">
        <CardHeader className="flex flex-row items-center justify-between">
          <div>
            <CardTitle>My Children</CardTitle>
            <CardDescription>
              Manage your children's information
            </CardDescription>
          </div>
          <Button 
            onClick={() => setIsAddChildOpen(true)}
            className="bg-rose-600 hover:bg-rose-700"
          >
            <UserPlus className="h-4 w-4 mr-2" />
            Add Child
          </Button>
        </CardHeader>
        <CardContent>
          {students.length > 0 ? (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              {students.map((student) => (
                <Card key={student.id} className="bg-gray-50 dark:bg-gray-900">
                  <CardContent className="pt-6">
                    <div className="text-center">
                      <h3 className="text-lg font-semibold mb-2">{student.name}</h3>
                      <p className="text-sm text-muted-foreground mb-1">{student.grade}</p>
                      {student.dateOfBirth && (
                        <p className="text-sm text-muted-foreground mb-1">
                          Born: {new Date(student.dateOfBirth).toLocaleDateString()}
                        </p>
                      )}
                      {student.emergencyContact && (
                        <p className="text-sm text-muted-foreground">
                          Emergency: {student.emergencyContact}
                        </p>
                      )}
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          ) : (
            <div className="text-center py-8">
              <UserPlus className="h-12 w-12 mx-auto text-muted-foreground mb-2" />
              <h3 className="text-lg font-medium">No children added yet</h3>
              <p className="text-muted-foreground">
                Add your children to manage their school information
              </p>
              <Button 
                onClick={() => setIsAddChildOpen(true)}
                className="mt-4 bg-rose-600 hover:bg-rose-700"
              >
                <UserPlus className="h-4 w-4 mr-2" />
                Add Your First Child
              </Button>
            </div>
          )}
        </CardContent>
      </Card>

      <AddChildDialog
        open={isAddChildOpen}
        onOpenChange={setIsAddChildOpen}
        onAddChild={handleAddChild}
      />
    </div>
  );
}
